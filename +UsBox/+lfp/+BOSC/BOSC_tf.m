function [B,T,F, B2]=BOSC_tf(eegsignal,F,Fsample,wavenumber);% [B,T,F]=BOSC_tf(eegsignal,F,Fsample,wavenumber);%% This function computes a continuous wavelet (Morlet) transform on% a segment of EEG signal; this can be used to estimate the% background spectrum (BOSC_bgfit) or to apply the BOSC method to% detect oscillatory episodes in signal of interest (BOSC_detect).%% parameters:% eegsignal - a row vector containing a segment of EEG signal to be%             transformed% F - a set of frequencies to sample (Hz)% Fsample - sampling rate of the time-domain signal (Hz)% wavenumber is the size of the wavelet (typically, width=6)%	% returns:% B - time-frequency spectrogram: power as a function of frequency%     (rows) and time (columns)% T - vector of time values (based on sampling rate, Fsample)st=1./(2*pi*(F/wavenumber));A=1./sqrt(st*sqrt(pi));B = zeros(length(F),length(eegsignal)); % initialize the time-frequency matrixB2 = zeros(length(F),length(eegsignal)); % initialize the time-frequency matrixfor f=1:length(F) % loop through sampled frequencies  t=-3.6*st(f):(1/Fsample):3.6*st(f);  m=A(f)*exp(-t.^2/(2*st(f)^2)).*exp(i*2*pi*F(f).*t); % Morlet wavelet  y=conv(eegsignal,m);   B(f,:)=y(ceil(length(m)/2):length(y)-floor(length(m)/2));    %% final bit added by hja 6/14/2022 in an attempt to have more meaningful amplitude.  % in other words, the amplitude of a +/- 1 sin wave should be ~1.0  m2=exp(-t.^2/(2*st(f)^2)).*exp(i*2*pi*F(f).*t); % Morlet wavelet  y2=(1/abs(sum(m2)))*conv(eegsignal,m2)/(length(t)); %5.7471  B2(f,:)=y2(ceil(length(m2)/2):length(y2)-floor(length(m2)/2));  %[abs(sum(m)) abs(sum(m2))]endT=(1:size(eegsignal,2))/Fsample;